package com.telegram_bots.bookbot.bot.service;


import com.telegram_bots.bookbot.model.dto.LitresBookDto;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import com.telegram_bots.bookbot.model.entities.Book;

import java.util.*;

@Service
public class MessageService {

    public SendMessage buildWelcomeMessage(Long chatId) {
        return buildWelcomeMessage(String.valueOf(chatId));
    }

    public SendMessage buildWelcomeMessage(String chatId) {
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        List<InlineKeyboardButton> row = new ArrayList<>();

        row.add(InlineKeyboardButton.builder()
                .text("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –∫–Ω–∏–≥–∏")
                .callbackData("show_books")
                .build());

        row.add(InlineKeyboardButton.builder()
                .text("–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É")
                .callbackData("add_book")
                .build());

        markup.setKeyboard(List.of(row));

        return SendMessage.builder()
                .chatId(chatId)
                .text("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–Ω–∏–≥ üìö")
                .replyMarkup(markup)
                .build();
    }


    public SendMessage buildRequestBookTitleMessage(Long chatId) {
        return buildRequestBookTitleMessage(String.valueOf(chatId));
    }

    public SendMessage buildRequestBookTitleMessage(String chatId) {
        return SendMessage.builder()
                .chatId(chatId)
                .text("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏:")
                .build();
    }


    public SendMessage buildBookSearchResults(Long chatId, List<LitresBookDto> books) {
        return buildBookSearchResults(String.valueOf(chatId), books);
    }

    public SendMessage buildBookSearchResults(String chatId, List<LitresBookDto> books) {
        if (books.isEmpty()) {
            return SendMessage.builder()
                    .chatId(chatId)
                    .text("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–æ—Å—å üò¢ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –µ—â—ë —Ä–∞–∑.")
                    .build();
        }

        List<List<InlineKeyboardButton>> rows = new ArrayList<>();

        for (int i = 0; i < books.size(); i++) {
            LitresBookDto book = books.get(i);
            String text = book.getTitle() + " - " + book.getAuthor();
            String callback = "select_book:" + book.getTitle() + "|" + i;

            InlineKeyboardButton button = InlineKeyboardButton.builder()
                    .text(text)
                    .callbackData(callback)
                    .build();

            rows.add(List.of(button));
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã
        rows.add(List.of(
                InlineKeyboardButton.builder()
                        .text("‚ùå –û—Ç–º–µ–Ω–∞")
                        .callbackData("cancel")
                        .build()
        ));

        InlineKeyboardMarkup markup = InlineKeyboardMarkup.builder().keyboard(rows).build();

        return SendMessage.builder()
                .chatId(chatId)
                .text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–∏–≥—É:")
                .replyMarkup(markup)
                .build();
    }

    public SendMessage buildCancelledMessage(Long chatId) {
        return buildCancelledMessage(String.valueOf(chatId));
    }

    public SendMessage buildCancelledMessage(String chatId) {
        return SendMessage.builder()
                .chatId(chatId)
                .text("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
                .build();
    }

    public SendMessage buildUnknownCommandMessage(Long chatId) {
        return buildUnknownCommandMessage(String.valueOf(chatId));
    }

    public SendMessage buildUnknownCommandMessage(String chatId) {
        return SendMessage.builder()
                .chatId(chatId)
                .text("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ /start")
                .build();
    }

    public SendMessage buildUnknownCallbackMessage(Long chatId) {
        return buildUnknownCallbackMessage(String.valueOf(chatId));
    }

    public SendMessage buildUnknownCallbackMessage(String chatId) {
        return SendMessage.builder()
                .chatId(chatId)
                .text("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
                .build();
    }

    public SendMessage buildBookListMessage(Long chatId, List<Book> books) {
        return buildBookListMessage(String.valueOf(chatId), books);
    }

    public SendMessage buildBookListMessage(String chatId, List<Book> books) {
        StringBuilder bookListText = new StringBuilder("–°–ø–∏—Å–æ–∫ –∫–Ω–∏–≥:\n");
        for (Book book : books) {
            bookListText.append(book.getTitle())
                    .append(" - ")
                    .append(book.getAuthor())
                    .append(" - ")
                    .append(book.getStatus().getDisplayNameRu())
                    .append("\n");
        }

        InlineKeyboardButton addButton = new InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É");
        addButton.setCallbackData("add_book");
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        markup.setKeyboard(List.of(List.of(addButton)));

        return SendMessage.builder()
                .chatId(chatId)
                .text(bookListText.toString())
                .replyMarkup(markup)
                .build();
    }

    public SendMessage buildBookAddedMessage(Long chatId, String title) {
        return buildBookAddedMessage(String.valueOf(chatId), title);
    }

    public SendMessage buildBookAddedMessage(String chatId, String title) {
        return SendMessage.builder()
                .chatId(chatId)
                .text("–ö–Ω–∏–≥–∞ \"" + title + "\" –¥–æ–±–∞–≤–ª–µ–Ω–∞ üìö")
                .build();
    }

    public SendMessage buildBookNotFoundByIndexMessage(Long chatId) {
        return buildBookNotFoundByIndexMessage(String.valueOf(chatId));
    }

    public SendMessage buildBookNotFoundByIndexMessage(String chatId) {
        return SendMessage.builder()
                .chatId(chatId)
                .text("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–Ω–∏–≥—É –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∏–Ω–¥–µ–∫—Å—É.")
                .build();
    }
}
